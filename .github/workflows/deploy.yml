name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up environment variables
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env
          echo "SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}" >> .env
          echo "BUCKET_NAME=${{ secrets.BUCKET_NAME }}" >> .env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> .env
          echo "REDIS_DB=${{ secrets.REDIS_DB }}" >> .env
          echo "REDIS_USERNAME=${{ secrets.REDIS_USERNAME }}" >> .env
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> .env
          echo "CELERY_BROKER_URL=${{ secrets.CELERY_BROKER_URL }}" >> .env
          echo "CELERY_RESULT_BACKEND=${{ secrets.CELERY_RESULT_BACKEND }}" >> .env
          echo "CELERY_TIMEZONE=${{ secrets.CELERY_TIMEZONE }}" >> .env
          echo "CELERY_ENABLE_UTC=${{ secrets.CELERY_ENABLE_UTC }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }} >> .env
          echo "ALGORITHM=${{ secrets.ALGORITHM }}" >> .env
          echo "ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}" >> .env
          echo "LOCALHOST=${{ secrets.LOCALHOST }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "PYTHONPATH=${{ secrets.PYTHONPATH }}" >> .env

      - name: Connect to server and deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -e  # Остановить выполнение при ошибке

            echo "Переход в рабочую директорию..."
            cd /var/immortal_poni/dockers/immortal_poni

            echo "Запись переменных окружения из ENV_FILE..."
            echo "${{ secrets.ENV_FILE }}" > .env
            echo "Проверка содержимого .env..."
            cat .env

            echo "Остановка старых контейнеров..."
            docker compose down

            echo "⬇ Обновление кода из репозитория..."
            git pull || git fetch --all && git reset --hard origin/main

            echo "Очистка неиспользуемых данных Docker..."
            docker system prune -a -f

            echo "Сборка и запуск новых контейнеров..."
            docker compose up -d

            echo "Деплой завершён!"